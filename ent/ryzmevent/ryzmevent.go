// Code generated by ent, DO NOT EDIT.

package ryzmevent

const (
	// Label holds the string label denoting the ryzmevent type in the database.
	Label = "ryzm_event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// EdgeEvent holds the string denoting the event edge name in mutations.
	EdgeEvent = "event"
	// Table holds the table name of the ryzmevent in the database.
	Table = "ryzm_events"
	// EventTable is the table that holds the event relation/edge.
	EventTable = "ryzm_events"
	// EventInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventInverseTable = "events"
	// EventColumn is the table column denoting the event relation/edge.
	EventColumn = "event_related_ryzm_events"
)

// Columns holds all SQL columns for ryzmevent fields.
var Columns = []string{
	FieldID,
	FieldUUID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "ryzm_events"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"event_related_ryzm_events",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
