// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldIsAdminVerified holds the string denoting the is_admin_verified field in the database.
	FieldIsAdminVerified = "is_admin_verified"
	// FieldDeleteProtected holds the string denoting the delete_protected field in the database.
	FieldDeleteProtected = "delete_protected"
	// FieldAPIKey holds the string denoting the api_key field in the database.
	FieldAPIKey = "api_key"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeGoogleOauthTokens holds the string denoting the google_oauth_tokens edge name in mutations.
	EdgeGoogleOauthTokens = "google_oauth_tokens"
	// EdgeGoogleOauthStates holds the string denoting the google_oauth_states edge name in mutations.
	EdgeGoogleOauthStates = "google_oauth_states"
	// EdgeEvents holds the string denoting the events edge name in mutations.
	EdgeEvents = "events"
	// EdgeExternalCalendars holds the string denoting the external_calendars edge name in mutations.
	EdgeExternalCalendars = "external_calendars"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"
	// Table holds the table name of the user in the database.
	Table = "users"
	// GoogleOauthTokensTable is the table that holds the google_oauth_tokens relation/edge.
	GoogleOauthTokensTable = "google_oauth_tokens"
	// GoogleOauthTokensInverseTable is the table name for the GoogleOauthToken entity.
	// It exists in this package in order to avoid circular dependency with the "googleoauthtoken" package.
	GoogleOauthTokensInverseTable = "google_oauth_tokens"
	// GoogleOauthTokensColumn is the table column denoting the google_oauth_tokens relation/edge.
	GoogleOauthTokensColumn = "user_id"
	// GoogleOauthStatesTable is the table that holds the google_oauth_states relation/edge.
	GoogleOauthStatesTable = "google_oauth_states"
	// GoogleOauthStatesInverseTable is the table name for the GoogleOauthState entity.
	// It exists in this package in order to avoid circular dependency with the "googleoauthstate" package.
	GoogleOauthStatesInverseTable = "google_oauth_states"
	// GoogleOauthStatesColumn is the table column denoting the google_oauth_states relation/edge.
	GoogleOauthStatesColumn = "user_id"
	// EventsTable is the table that holds the events relation/edge. The primary key declared below.
	EventsTable = "user_events"
	// EventsInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventsInverseTable = "events"
	// ExternalCalendarsTable is the table that holds the external_calendars relation/edge.
	ExternalCalendarsTable = "external_calendars"
	// ExternalCalendarsInverseTable is the table name for the ExternalCalendar entity.
	// It exists in this package in order to avoid circular dependency with the "externalcalendar" package.
	ExternalCalendarsInverseTable = "external_calendars"
	// ExternalCalendarsColumn is the table column denoting the external_calendars relation/edge.
	ExternalCalendarsColumn = "user_id"
	// RolesTable is the table that holds the roles relation/edge. The primary key declared below.
	RolesTable = "user_roles"
	// RolesInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RolesInverseTable = "roles"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldUsername,
	FieldEmail,
	FieldPassword,
	FieldFirstName,
	FieldLastName,
	FieldIsAdminVerified,
	FieldDeleteProtected,
	FieldAPIKey,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

var (
	// EventsPrimaryKey and EventsColumn2 are the table columns denoting the
	// primary key for the events relation (M2M).
	EventsPrimaryKey = []string{"user_id", "event_id"}
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"user_id", "role_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	UserIDValidator func(string) error
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func([]byte) error
	// DefaultIsAdminVerified holds the default value on creation for the "is_admin_verified" field.
	DefaultIsAdminVerified bool
	// DefaultDeleteProtected holds the default value on creation for the "delete_protected" field.
	DefaultDeleteProtected bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
