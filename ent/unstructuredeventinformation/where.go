// Code generated by ent, DO NOT EDIT.

package unstructuredeventinformation

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/scarlet0725/prism-api/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLTE(FieldID, id))
}

// Ryzmuuid applies equality check predicate on the "ryzmuuid" field. It's identical to RyzmuuidEQ.
func Ryzmuuid(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldRyzmuuid, v))
}

// VenueName applies equality check predicate on the "venue_name" field. It's identical to VenueNameEQ.
func VenueName(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldVenueName, v))
}

// ArtistName applies equality check predicate on the "artist_name" field. It's identical to ArtistNameEQ.
func ArtistName(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldArtistName, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldPrice, v))
}

// RyzmuuidEQ applies the EQ predicate on the "ryzmuuid" field.
func RyzmuuidEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldRyzmuuid, v))
}

// RyzmuuidNEQ applies the NEQ predicate on the "ryzmuuid" field.
func RyzmuuidNEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNEQ(FieldRyzmuuid, v))
}

// RyzmuuidIn applies the In predicate on the "ryzmuuid" field.
func RyzmuuidIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldIn(FieldRyzmuuid, vs...))
}

// RyzmuuidNotIn applies the NotIn predicate on the "ryzmuuid" field.
func RyzmuuidNotIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNotIn(FieldRyzmuuid, vs...))
}

// RyzmuuidGT applies the GT predicate on the "ryzmuuid" field.
func RyzmuuidGT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGT(FieldRyzmuuid, v))
}

// RyzmuuidGTE applies the GTE predicate on the "ryzmuuid" field.
func RyzmuuidGTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGTE(FieldRyzmuuid, v))
}

// RyzmuuidLT applies the LT predicate on the "ryzmuuid" field.
func RyzmuuidLT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLT(FieldRyzmuuid, v))
}

// RyzmuuidLTE applies the LTE predicate on the "ryzmuuid" field.
func RyzmuuidLTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLTE(FieldRyzmuuid, v))
}

// RyzmuuidContains applies the Contains predicate on the "ryzmuuid" field.
func RyzmuuidContains(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContains(FieldRyzmuuid, v))
}

// RyzmuuidHasPrefix applies the HasPrefix predicate on the "ryzmuuid" field.
func RyzmuuidHasPrefix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasPrefix(FieldRyzmuuid, v))
}

// RyzmuuidHasSuffix applies the HasSuffix predicate on the "ryzmuuid" field.
func RyzmuuidHasSuffix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasSuffix(FieldRyzmuuid, v))
}

// RyzmuuidEqualFold applies the EqualFold predicate on the "ryzmuuid" field.
func RyzmuuidEqualFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEqualFold(FieldRyzmuuid, v))
}

// RyzmuuidContainsFold applies the ContainsFold predicate on the "ryzmuuid" field.
func RyzmuuidContainsFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContainsFold(FieldRyzmuuid, v))
}

// VenueNameEQ applies the EQ predicate on the "venue_name" field.
func VenueNameEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldVenueName, v))
}

// VenueNameNEQ applies the NEQ predicate on the "venue_name" field.
func VenueNameNEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNEQ(FieldVenueName, v))
}

// VenueNameIn applies the In predicate on the "venue_name" field.
func VenueNameIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldIn(FieldVenueName, vs...))
}

// VenueNameNotIn applies the NotIn predicate on the "venue_name" field.
func VenueNameNotIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNotIn(FieldVenueName, vs...))
}

// VenueNameGT applies the GT predicate on the "venue_name" field.
func VenueNameGT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGT(FieldVenueName, v))
}

// VenueNameGTE applies the GTE predicate on the "venue_name" field.
func VenueNameGTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGTE(FieldVenueName, v))
}

// VenueNameLT applies the LT predicate on the "venue_name" field.
func VenueNameLT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLT(FieldVenueName, v))
}

// VenueNameLTE applies the LTE predicate on the "venue_name" field.
func VenueNameLTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLTE(FieldVenueName, v))
}

// VenueNameContains applies the Contains predicate on the "venue_name" field.
func VenueNameContains(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContains(FieldVenueName, v))
}

// VenueNameHasPrefix applies the HasPrefix predicate on the "venue_name" field.
func VenueNameHasPrefix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasPrefix(FieldVenueName, v))
}

// VenueNameHasSuffix applies the HasSuffix predicate on the "venue_name" field.
func VenueNameHasSuffix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasSuffix(FieldVenueName, v))
}

// VenueNameEqualFold applies the EqualFold predicate on the "venue_name" field.
func VenueNameEqualFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEqualFold(FieldVenueName, v))
}

// VenueNameContainsFold applies the ContainsFold predicate on the "venue_name" field.
func VenueNameContainsFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContainsFold(FieldVenueName, v))
}

// ArtistNameEQ applies the EQ predicate on the "artist_name" field.
func ArtistNameEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldArtistName, v))
}

// ArtistNameNEQ applies the NEQ predicate on the "artist_name" field.
func ArtistNameNEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNEQ(FieldArtistName, v))
}

// ArtistNameIn applies the In predicate on the "artist_name" field.
func ArtistNameIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldIn(FieldArtistName, vs...))
}

// ArtistNameNotIn applies the NotIn predicate on the "artist_name" field.
func ArtistNameNotIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNotIn(FieldArtistName, vs...))
}

// ArtistNameGT applies the GT predicate on the "artist_name" field.
func ArtistNameGT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGT(FieldArtistName, v))
}

// ArtistNameGTE applies the GTE predicate on the "artist_name" field.
func ArtistNameGTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGTE(FieldArtistName, v))
}

// ArtistNameLT applies the LT predicate on the "artist_name" field.
func ArtistNameLT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLT(FieldArtistName, v))
}

// ArtistNameLTE applies the LTE predicate on the "artist_name" field.
func ArtistNameLTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLTE(FieldArtistName, v))
}

// ArtistNameContains applies the Contains predicate on the "artist_name" field.
func ArtistNameContains(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContains(FieldArtistName, v))
}

// ArtistNameHasPrefix applies the HasPrefix predicate on the "artist_name" field.
func ArtistNameHasPrefix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasPrefix(FieldArtistName, v))
}

// ArtistNameHasSuffix applies the HasSuffix predicate on the "artist_name" field.
func ArtistNameHasSuffix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasSuffix(FieldArtistName, v))
}

// ArtistNameEqualFold applies the EqualFold predicate on the "artist_name" field.
func ArtistNameEqualFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEqualFold(FieldArtistName, v))
}

// ArtistNameContainsFold applies the ContainsFold predicate on the "artist_name" field.
func ArtistNameContainsFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContainsFold(FieldArtistName, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldLTE(FieldPrice, v))
}

// PriceContains applies the Contains predicate on the "price" field.
func PriceContains(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContains(FieldPrice, v))
}

// PriceHasPrefix applies the HasPrefix predicate on the "price" field.
func PriceHasPrefix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasPrefix(FieldPrice, v))
}

// PriceHasSuffix applies the HasSuffix predicate on the "price" field.
func PriceHasSuffix(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldHasSuffix(FieldPrice, v))
}

// PriceEqualFold applies the EqualFold predicate on the "price" field.
func PriceEqualFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldEqualFold(FieldPrice, v))
}

// PriceContainsFold applies the ContainsFold predicate on the "price" field.
func PriceContainsFold(v string) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(sql.FieldContainsFold(FieldPrice, v))
}

// HasEvent applies the HasEdge predicate on the "event" edge.
func HasEvent() predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, EventTable, EventColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasEventWith applies the HasEdge predicate on the "event" edge with a given conditions (other predicates).
func HasEventWith(preds ...predicate.Event) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(EventInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, EventTable, EventColumn),
		)
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.UnStructuredEventInformation) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.UnStructuredEventInformation) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.UnStructuredEventInformation) predicate.UnStructuredEventInformation {
	return predicate.UnStructuredEventInformation(func(s *sql.Selector) {
		p(s.Not())
	})
}
